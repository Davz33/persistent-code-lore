name: Tagged Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact_name: persistent-code-lore-linux-x86_64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            artifact_name: persistent-code-lore-windows-x86_64
          - target: x86_64-apple-darwin
            os: macos-latest
            artifact_name: persistent-code-lore-macos-x86_64
          - target: aarch64-apple-darwin
            os: macos-latest
            artifact_name: persistent-code-lore-macos-aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/chat-history-consolidator

      - name: Strip binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/chat-history-consolidator.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            target/${{ matrix.target }}/release/chat-history-consolidator*
          retention-days: 30

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find ./artifacts -name "chat-history-consolidator*" -exec cp {} ./release-assets/ \;
          
          # Create checksums
          cd release-assets
          for file in *; do
            if [[ "$file" == *.exe ]]; then
              sha256sum "$file" > "${file}.sha256"
            else
              sha256sum "$file" > "${file}.sha256"
            fi
          done
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ./release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  notify-completion:
    name: Notify Release Complete
    runs-on: ubuntu-latest
    needs: [build, release]
    if: always()
    
    steps:
      - name: Check release status
        run: |
          echo "Build status: ${{ needs.build.result }}"
          echo "Release status: ${{ needs.release.result }}"
          echo "Release created successfully in current repository"
          echo "To sync to persistent-code-lore, you can manually push or set up repository mirroring"
